plugins {
    id 'java'
   // id 'distribution'
    id 'application'
}

group 'org.example'
version '1.0'

tasks.whenTaskAdded { task ->
    ['startScripts', 'distTar'].each { String skipTaskName ->
        if (task.name.contains(skipTaskName)) {
            task.enabled = false
        }
    }
}

//apply plugin: 'application'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
String mainClassName='edu.mcw.rgd.ontomate.SolrUpdater'
String appName='SolrUpdater'

project.archivesBaseName = appName

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.elasticsearch.client:elasticsearch-rest-client:8.17.0'
    implementation "dev.langchain4j:langchain4j-ollama:0.36.2"
    implementation ('org.apache.commons:commons-dbcp2:2.10.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.5'

    implementation fileTree(dir: 'lib', include: '*.jar')
    implementation 'log4j:log4j:1.2.17'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'

    // https://mvnrepository.com/artifact/org.jsonschema2pojo/jsonschema2pojo-core
    implementation group: 'org.jsonschema2pojo', name: 'jsonschema2pojo-core', version: '1.2.1'
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.39'
// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    // https://mvnrepository.com/artifact/org.apache.solr/solr-core
    implementation group: 'org.apache.solr', name: 'solr-core', version: '8.11.4'

    // https://mvnrepository.com/artifact/org.apache.solr/solr-solrj
    implementation group: 'org.apache.solr', name: 'solr-solrj', version: '8.11.4'
// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.4'

// https://mvnrepository.com/artifact/org.apache.solr/solr-cell
    implementation group: 'org.apache.solr', name: 'solr-cell', version: '8.11.4'
// https://mvnrepository.com/artifact/org.apache.solr/solr-analysis-extras
    implementation group: 'org.apache.solr', name: 'solr-analysis-extras', version: '8.11.4'

// https://mvnrepository.com/artifact/org.apache.solr/solr-dataimporthandler
    testImplementation group: 'org.apache.solr', name: 'solr-dataimporthandler', version: '8.11.4'
// https://mvnrepository.com/artifact/org.apache.solr/solr-test-framework
    testImplementation group: 'org.apache.solr', name: 'solr-test-framework', version: '8.11.4'
    // https://mvnrepository.com/artifact/org.apache.solr/solr-velocity
    implementation group: 'org.apache.solr', name: 'solr-velocity', version: '8.11.4'
    // https://mvnrepository.com/artifact/org.apache.solr/solr-langid
    implementation group: 'org.apache.solr', name: 'solr-langid', version: '8.11.4'



}

test {
    useJUnitPlatform()
}

jar {
    zip64=true
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName

    }
//    from{
//        configurations.compile.collect{it.isDirectory()?it:zipTree(it)}
//    }

}

distributions {
    main {
        distributionBaseName = appName
    }
}

task createDistro(type: Copy) {
    def zipFile = file('build/distributions/'+appName+'-' + version + '.zip')
    def outputDir = file("build/install")

    from zipTree(zipFile)
    into outputDir
}
createDistro.dependsOn assembleDist
createDistro.dependsOn distZip